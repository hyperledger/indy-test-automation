#!/usr/bin/env python3

import json, getpass
from chaosindy.common import *
from chaosindy.probes.validator_info import get_validator_info
from os.path import expanduser
from os import environ
from shutil import rmtree

username = getpass.getuser()

# TODO: use argparse to get user input
genesis_file = environ.get('CHAOS_GENESIS_FILE', '/home/{}/pool1/pool_transactions_genesis'.format(username))

# Generate a temp dir containing JSON for each validator node
get_validator_info(genesis_file, timeout=DEFAULT_CHAOS_GET_VALIDATOR_INFO_TIMEOUT)
temp_dir = get_chaos_temp_dir()

aliases = []
with open(expanduser(genesis_file), 'r') as genesisfile:
    for line in genesisfile:
        aliases.append(json.loads(line)['txn']['data']['data']['alias'])

# Extract Catchup_status for the domain ledger for each validator_node
print('Node\tStatus\tCatchup txns')
print('')
for node in sorted(aliases):
    filename = '{}/{}-validator-info'.format(temp_dir, node)
    try:
        with open(filename, 'r') as f:
            validator_info = json.load(f)
        if 'data' in validator_info:
            print('{}\t{}\t{}'.format( node,
                validator_info['data']['Node_info']['Catchup_status']['Ledger_statuses']['1'],
                validator_info['data']['Node_info']['Catchup_status']['Number_txns_in_catchup']['1']))
        else:
            print('{}\t{}\t{}'.format( node,
                validator_info['Node_info']['Catchup_status']['Ledger_statuses']['1'],
                validator_info['Node_info']['Catchup_status']['Number_txns_in_catchup']['1']))
    except:
        print('{}\t{}\t{}'.format( node, 'Unknown', 'Unknown' ))

# Cleanup
rmtree(temp_dir)
